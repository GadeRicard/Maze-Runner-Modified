#BlueJ class context
comment0.target=MazeWalker
comment0.text=\r\n\ Write\ a\ description\ of\ class\ MazeWalker\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=MazeWalker()
comment2.params=
comment2.target=void\ testWin()
comment2.text=\r\n\ checkWin\ will\ check\ if\ MazeWalker\ has\ reached\ WinningSpace\ and\ show\ a\ message\ to\ say\r\n\ the\ maze\ has\ been\ completed\r\n\ \r\n\ @param\ there\ are\ no\ parameters\r\n\ @return\ there\ is\ no\ return\ type\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ do\ whatever\ the\ MazeWalker\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment4.params=
comment4.target=boolean\ wallOnLeft()
comment4.text=\r\n\ wallOnLeft\ checks\ whether\ there\ is\ a\ wall\ on\ the\ MazeWalker's\ left\r\n\ \r\n\ @param\ there\ are\ no\ parameters\r\n\ @return\ Returns\ a\ boolean\ stating\ whether\ or\ not\ there\ is\ a\ wall\ on\ the\ left\r\n
comment5.params=
comment5.target=boolean\ canMoveForward()
comment5.text=\r\n\ canMoveForward\ checks\ whether\ MazeWalker\ can\ move\ forward\r\n\ \r\n\ @param\ there\ are\ no\ parameters\r\n\ @return\ a\ boolean\ stating\ whether\ or\ not\ we\ can\ move\ forward\r\n
numComments=6
